# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'

    - name: Check code formatting using gofmt
      uses: Jerome1337/gofmt-action@v1.0.5
      with:
        # Path used by gofmt command
        gofmt-path: "./"
        gofmt-flags: "-l -d"

    - name: Golangci-lint
      uses: golangci/golangci-lint-action@v6.0.1
      with:
        # The version of golangci-lint to use.
        # When `install-mode` is `binary` (default) the value can be v1.2 or v1.2.3 or `latest` to use the latest version.
        # When `install-mode` is `goinstall` the value can be v1.2.3, `latest`, or the hash of a commit.
        version: "v1.64.8"
        # The mode to install golangci-lint. It can be 'binary' or 'goinstall'.
        install-mode: binary
        # golangci-lint working directory, default is project root
        working-directory: "./"
        # the token is used for fetching patch of a pull request to show only new issues
        github-token: ${{ github.token }}
        # if set to true and the action runs on a pull request - the action outputs only newly found issues
        only-new-issues: false
        # if set to true then the all caching functionality will be complete disabled,
        # takes precedence over all other caching options.
        skip-cache: false
        # if set to true then the action will not save any caches, but it may still
        # restore existing caches, subject to other options.
        skip-save-cache: false
        # Force the usage of the embedded problem matchers
        problem-matchers: false
        # golangci-lint command line arguments
        # args: # optional, default is
        # Periodically invalidate a cache because a new code being added. (number of days)
        # cache-invalidation-interval: # optional, default is 7

    - name: Build
      run: go build -v ./...
